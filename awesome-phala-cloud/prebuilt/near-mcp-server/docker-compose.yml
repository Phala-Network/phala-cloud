services:
  app:
    image: tolak/near-mcp-server:v0.1.0
    container_name: near-mcp-server
    restart: unless-stopped
    volumes:
      - ~/.near-keystore:/root/.near-keystore
    # ports: # Using caddy to proxy the server to enhance security, so no need to expose the port
    #   - "3001:3001"
    # Override the entrypoint from the Dockerfile
    entrypoint: []
    command: ["sh", "-c", "mkdir -p /root/.near-keystore/$${NEAR_NETWORK} && if [ ! -z \"$${NEAR_KEYSTOREDATA}\" ] && [ ! -z \"$${NEAR_NETWORK}\" ] && [ ! -z \"$${NEAR_ACCOUNT_ID}\" ]; then echo \"$${NEAR_KEYSTOREDATA}\" | base64 -d > /root/.near-keystore/$${NEAR_NETWORK}/$${NEAR_ACCOUNT_ID}.json && echo \"Keystore data written to /root/.near-keystore/$${NEAR_NETWORK}/$${NEAR_ACCOUNT_ID}.json\"; fi && cd /app && exec node dist/near-mcp.js run --remote --port 3001"]
    environment:
      - NODE_ENV=production
      - NEAR_KEYSTOREDATA=${NEAR_KEYSTOREDATA}
      - NEAR_NETWORK=${NEAR_NETWORK:-mainnet}
      - NEAR_ACCOUNT_ID=${NEAR_ACCOUNT_ID}
      - NEAR_KEYSTORE=/root/.near-keystore
    networks:
      - internal

  proxy:
    image: caddy:2.8
    ports:
      - "18080:80"
    environment:
      - BEARER_TOKEN=${BEARER_TOKEN}
    configs:
      - source: caddy_config
        target: /etc/caddy/Caddyfile
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - internal

configs:
  caddy_config:
    content: |
      :80 {
          @valid_auth {
              header Authorization "Bearer $BEARER_TOKEN"
          }
          route @valid_auth {
              reverse_proxy app:3001
          }
          route {
              respond 401 {
                  body "Unauthorized"
                  close
              }
          }
      }

networks:
  internal:
    driver: bridge
